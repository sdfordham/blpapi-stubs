from typing import Any, Optional, Union

from .chandle import CHandle

class Name(CHandle):
    @staticmethod
    def findName(nameString: str) -> Optional[Name]: ...
    @staticmethod
    def hasName(nameString: str) -> bool: ...
    def __init__(
        self, nameString: str, internalHandle: Optional[Any] = ...
    ) -> None: ...
    def __len__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __hash__(self) -> int: ...

def getNamePair(name: Union[Name, str]) -> tuple[Optional[Name], Optional[Any]]: ...

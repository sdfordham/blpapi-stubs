from typing import Any, ClassVar, Union, Optional

from .chandle import CHandle
from .internals import CorrelationId
from .message import Message

class ResolutionList(CHandle):
    UNRESOLVED: ClassVar[int]
    RESOLVED: ClassVar[int]
    RESOLUTION_FAILURE_BAD_SERVICE: ClassVar[int]
    RESOLUTION_FAILURE_SERVICE_AUTHORIZATION_FAILED: ClassVar[int]
    RESOLUTION_FAILURE_BAD_TOPIC: ClassVar[int]
    RESOLUTION_FAILURE_TOPIC_AUTHORIZATION_FAILED: ClassVar[int]
    @staticmethod
    def extractAttributeFromResolutionSuccess(message: Any, attribute: Any) -> None: ...
    def __init__(self) -> None: ...
    def add(
        self,
        topicOrMessage: Union[str, Message],
        correlationId: Optional[CorrelationId] = ...,
    ): ...
    def addAttribute(self, attribute: Any) -> None: ...
    def correlationIdAt(self, index: int) -> CorrelationId: ...
    def topicString(self, correlationId: CorrelationId) -> str: ...
    def topicStringAt(self, index: int) -> str: ...
    def status(self, correlationId: CorrelationId) -> int: ...
    # Docstring of `statusAt` does not match signature ... FIXME
    def statusAt(self, index: int) -> int: ...
    def attribute(self, attribute: Any, correlationId: Any) -> None: ...
    def attributeAt(self, attribute: Any, index: Any) -> None: ...
    def message(self, correlationId: CorrelationId) -> Message: ...
    def messageAt(self, index: int) -> Message: ...
    def size(self) -> int: ...
